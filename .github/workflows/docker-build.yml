
---
name: Create and Publish Docker Image

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      platforms:
        type: string
        default: linux/amd64,linux/arm64
      build_args:
        type: string
      cache_dir:
        type: string
        description: "Where the cache is added into the container. Default: `/root/.cache/`"
        default: /root/.cache

# Cancel previous run for same branch
concurrency:
  group: ${{ github.ref }}-1
  cancel-in-progress: true

jobs:
  build_sha:
    runs-on: self-hosted
    if: ${{ !contains(github.ref, 'refs/tags/') }}
    timeout-minutes: 1440  # 24h
    # https://docs.docker.com/build/ci/github-actions/examples/#multi-platform-images
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Setup cachedir which can be used to speedup builds
      # https://pythonspeed.com/articles/docker-cache-pip-downloads/
      - name: Build Cache for Docker
        uses: actions/cache@v3
        with:
          key: docker-cache
          path: cache/  # default cache-source of cache-dance action

      - name: Inject build-cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v2.1.3
        with:
          cache-source: docker-cache
          cache-target: ${{ inputs.cache_dir }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ inputs.platforms }}
          push: true
          build-args: ${{ inputs.build_args }}
          labels: |
            org.opencontainers.image.created=${{ steps.build_date.outputs.date }}
            org.opencontainers.image.authors='Wilmar den Ouden <info@wilmardenouden.nl>'
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.documentation=${{ github.server_url }}/${{ github.repository }}/blob/main/README.md
            org.opencontainers.image.vendor=${{ github.repository_owner }}
          tags: |
            ${{ inputs.image_name }}:${{ github.sha }}
            ghcr.io/${{ inputs.image_name }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract build-cache from docker
        uses: reproducible-containers/buildkit-cache-dance@v2.1.3
        with:
          cache-target: ${{ inputs.cache_dir }}  # path in the docker container

  retag_branch:
    runs-on: self-hosted
    needs: build_sha
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get branch name
        run: echo "branch_name=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Retag to branch name
        uses: LANsible/copy-image-manifest-action@main
        with:
          source: ${{ inputs.image_name }}:${{ github.sha }}
          targets: |
            ${{ inputs.image_name }}:${{ env.branch_name }},
            ghcr.io/${{ inputs.image_name }}:${{ env.branch_name }}
          wait_platforms: ${{ inputs.platforms }}

  retag_tag:
    runs-on: self-hosted
    # https://github.com/orgs/community/discussions/25692
    if: ${{ contains(github.ref, 'refs/tags/') }}
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GHCR.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get tag name
        run: echo "tag_name=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Retag to tag and latest
        uses: LANsible/copy-image-manifest-action@main
        with:
          source: ${{ inputs.image_name }}:${{ github.sha }}
          targets: |
            ${{ inputs.image_name }}:${{ env.tag_name }},
            ${{ inputs.image_name }}:latest,
            ghcr.io/${{ inputs.image_name }}:${{ env.tag_name }},
            ghcr.io/${{ inputs.image_name }}:latest
          wait_platforms: ${{ inputs.platforms }}
